version: "3.8"

services:
  cosmosdb:
    image: cosmosdb
    env_file:
      - generated-env/env.cosmosdb
    build:
      context: ./
      dockerfile: cosmosdb/Dockerfile
    ports:
      - ${COSMOSDB_PORT}:3000
    networks:
      - io-fn

  fixtures:
    image: io-fixtures
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-fixtures
    build:
      context: ${IO_FIXTURES_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - IO_FIXTURES_COMMIT_SHA
    depends_on:
      - cosmosdb
    ports: []
    networks:
      - io-fn
    labels:
      - "traefik.enable=false"

  notificationhub:
    image: notificationhub
    build:
      context: ${NOTIFICATION_HUB_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - IO_NH_BRANCH
        - NOTIFICATION_HUB_COMMIT_SHA
    env_file:
      - generated-env/env.io-notification-hub
    ports:
      - "30000:30000"
    networks:
      - io-fn
    depends_on:
      - mailhog
    volumes:
      - "./io-backend/certs:/usr/src/app/certs:cached"

  io-bonus-inps-mock:
    image: io-bonus-inps-mock
    build:
      context: ${IO_BONUS_INPS_MOCK_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - IO_BONUS_INPS_MOCK_COMMIT_SHA
    ports:
      - "3003:3003"
    networks:
      - io-fn

  io-pn-mock:
    build:
      context: ${IO_PN_MOCK_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - IO_PN_MOCK_COMMIT_SHA
    env_file:
      - generated-env/env.io-pn-mock
    ports:
      - ${IO_PN_MOCK_PORT}:3004
    networks: 
      - io-fn
    depends_on:
      - cosmosdb
      - fixtures
    extra_hosts:
      - host.docker.internal:host-gateway
    
  functions:
    image: functions
    build:
      context: ./
      dockerfile: functions/Dockerfile
    command: /bin/true

  functions-node-14:
    image: functions-node-14
    build:
      context: ./
      dockerfile: functions-node-14/Dockerfile
    command: /bin/true

  functions-admin:
    image: io-functions-admin
    build:
      context: ${FUNCTIONS_ADMIN_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_ADMIN_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-admin
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_ADMIN_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions-node-14
      - traefik
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-admin.rule=Host(`functions-admin.localhost`) || PathPrefix(`/functions-admin`)"
      - "traefik.http.routers.functions-admin.entrypoints=web"

      # apply middleware to route
      - "traefik.http.routers.functions-admin.middlewares=testHeader,fn-admin-stripprefix"

  functions-app:
    image: io-functions-app
    build:
      context: ${FUNCTIONS_APP_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_APP_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-app
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_APP_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions-node-14
      - notificationhub
      - fixtures
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-app.rule=Host(`functions-app.localhost`) || PathPrefix(`/functions-app`)"
      - "traefik.http.routers.functions-app.entrypoints=websecure"
      - "traefik.http.routers.functions-app.tls=true"
      # apply middleware to route
      - "traefik.http.routers.functions-app.middlewares=fn-app-stripprefix"

  functions-app-messages:
    image: io-functions-app-messages
    build:
      context: ${FUNCTIONS_APP_MESSAGES_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_APP_MESSAGES_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-app-messages
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_APP_MESSAGES_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions-node-14
      - fixtures
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-app-messages.rule=Host(`functions-app-messages.localhost`) || PathPrefix(`/functions-app-messages`)"
      - "traefik.http.routers.functions-app-messages.entrypoints=websecure"
      - "traefik.http.routers.functions-app-messages.tls=true"
      # apply middleware to route
      - "traefik.http.routers.functions-app-messages.middlewares=fn-app-messages-stripprefix"

  functions-public:
    image: io-functions-public
    build:
      context: ${FUNCTIONS_PUBLIC_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_PUBLIC_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-public
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_PUBLIC_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-public.rule=Host(`functions-public.localhost`)"
      - "traefik.http.routers.functions-public.entrypoints=web"

  functions-services:
    image: io-functions-services
    build:
      context: ${FUNCTIONS_SERVICES_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_SERVICES_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-services
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_SERVICES_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions-node-14
      - fixtures
      - traefik
      - functions-admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-services.rule=Host(`functions-services.localhost`) || PathPrefix(`/functions-services`)"
      - "traefik.http.routers.functions-services.entrypoints=web"

      # apply middleware to route
      - "traefik.http.routers.functions-services.middlewares=testHeader,fn-services-stripprefix,htransform"

  functions-bonus:
    image: io-functions-bonus
    build:
      context: ${FUNCTIONS_BONUS_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_BONUS_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-bonus
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_BONUS_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-bonus.rule=Host(`functions-bonus.localhost`)"
      - "traefik.http.routers.functions-bonus.entrypoints=web"

  functions-cgn:
    image: io-functions-cgn
    build:
      context: ${FUNCTIONS_CGN_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_CGN_COMMIT_SHA
    env_file:
      - generated-env/env.cosmosdb
      - generated-env/env.io-functions-cgn
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_CGN_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-cgn.rule=Host(`functions-cgn.localhost`)"
      - "traefik.http.routers.functions-cgn.entrypoints=web"

  functions-pushnotifications:
    image: io-functions-pushnotifications
    build:
      context: ${FUNCTIONS_PUSHNOTIF_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_PUSHNOTIF_COMMIT_SHA
    env_file:
      - generated-env/env.io-functions-pushnotifications
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_PUSHNOTIF_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions
      - notificationhub
      - mailhog
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-pushnotif.rule=Host(`functions-pushnotif.localhost`)"
      - "traefik.http.routers.functions-pushnotif.entrypoints=web"

  functions-eucovidcerts:
    image: io-functions-eucovidcerts
    build:
      context: ${FUNCTIONS_EUCOVIDCERTS_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - FUNCTIONS_EUCOVIDCERTS_COMMIT_SHA
    env_file:
      - generated-env/env.io-functions-eucovidcerts
    working_dir: /usr/src/app
    ports:
      - ${FUNCTIONS_EUCOVIDCERTS_PORT}:7071
    networks:
      - io-fn
    depends_on:
      - functions-node-14
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-eucovidcerts.rule=Host(`functions-eucovidcerts.localhost`)"
      - "traefik.http.routers.functions-eucovidcerts.entrypoints=web"

  backend:
    image: io-backend
    build:
      context: ${IO_BACKEND_CONTEXT}
      dockerfile: ./Dockerfile
      args:
        - GITHUB_TOKEN
        - IO_BACKEND_COMMIT_SHA
    env_file:
      - generated-env/env.io-backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
    expose:
      - "443"
    ports:
      - ${IO_BACKEND_PORT}:443
      - "5859:5859"
    command: [ "yarn", "hot-reload" ]
    networks:
      - io-fn
    volumes:
      - "./io-backend/certs:/usr/src/app/certs:cached"

  # pagopa-proxy:
  #   image: io-pagopa-proxy
  #   build:
  #     context: ${IO_PAGOPA_PROXY_CONTEXT}
  #     dockerfile: ./Dockerfile
  #     args:
  #       - GITHUB_TOKEN
  #       - IO_PAGOPA_PROXY_COMMIT_SHA
  #   env_file:
  #     - generated-env/env.io-pagopa-proxy
  #   ports:
  #     - ${PAGOPAPROXY_PORT}:3001
  #   networks:
  #     - io-fn
  #   depends_on:
  #     - redis

  # pagopa-nodo-mock:
  #   image: io-pagopa-nodo-mock
  #   build:
  #     context: ${IO_PAGOPA_NODO_MOCK_CONTEXT}
  #     dockerfile: ./Dockerfile
  #     args:
  #       - GITHUB_TOKEN
  #       - IO_PAGOPA_NODO_MOCK_COMMIT_SHA
  #   env_file:
  #     - generated-env/env.io-pagopa-nodo-mock
  #   ports:
  #     - ${PAGOPA_PORT}:3002
  #   networks:
  #     - io-fn
  #   depends_on:
  #     - pagopa-proxy

  redis:
    container_name: redis
    image: wodby/redis:3.2-2.1.5
    ports:
      - "6379:6379"
    environment:
      REDIS_TIMEOUT: 300
      REDIS_TCP_KEEPALIVE: 60
      REDIS_MAXMEMORY: 182m
    networks:
      - io-fn

  spid-testenv2:
    container_name: spid-testenv2
    image: italia/spid-testenv2
    ports:
      - "8088:8088"
    volumes:
      - "./testenv2/conf:/app/conf:cached"
    networks:
      - io-fn

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - io-fn

  traefik:
    image: traefik:v2.8
    command: |-
      --entrypoints.web.address=:80
      --entrypoints.web.forwardedHeaders.insecure=true
      --entrypoints.websecure.address=:8080
      --entrypoints.websecure.forwardedHeaders.insecure=true
      --providers.docker=true
      --providers.docker.network=io-fn
      --log.level=ERROR
      --experimental.plugins.htransformation.modulename=github.com/tomMoulard/htransformation
      --experimental.plugins.htransformation.version=v0.2.5
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
      - 8080:8080
    networks:
      - io-fn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      # define middleware to be used in some functions services
      - "traefik.http.middlewares.testHeader.headers.customrequestheaders.x-user-id=unused"
      - "traefik.http.middlewares.testHeader.headers.customrequestheaders.x-user-groups=${REQ_USER_GROUPS}"
      - "traefik.http.middlewares.testHeader.headers.customrequestheaders.x-user-email=unused@example.com"
      - "traefik.http.middlewares.testHeader.headers.customrequestheaders.x-user-note=unused"
      - "traefik.http.middlewares.testHeader.headers.customrequestheaders.x-functions-key=unused"
      - "traefik.http.middlewares.fn-services-stripprefix.stripprefix.prefixes=/functions-services"
      - "traefik.http.middlewares.fn-admin-stripprefix.stripprefix.prefixes=/functions-admin"
      - "traefik.http.middlewares.fn-app-stripprefix.stripprefix.prefixes=/functions-app"
      - "traefik.http.middlewares.fn-app-messages-stripprefix.stripprefix.prefixes=/functions-app-messages"
      - "traefik.http.middlewares.htransform.plugin.htransformation.Rules[0].Header=x-subscription-id"
      - "traefik.http.middlewares.htransform.plugin.htransformation.Rules[0].Name=test"
      - "traefik.http.middlewares.htransform.plugin.htransformation.Rules[0].Type=Set"
      - "traefik.http.middlewares.htransform.plugin.htransformation.Rules[0].Value=special"
  whoami:
    image: traefik/whoami
    labels:
      traefik.http.routers.whoami.rule: Host(`whoami.localhost`)
      traefik.http.routers.whoami.middlewares: htransform
    networks:
      - io-fn

networks:
  io-fn:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
