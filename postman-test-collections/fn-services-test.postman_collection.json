{
	"info": {
		"_postman_id": "b05d987d-e24f-47dd-a8d1-a1618da31f93",
		"name": "IO API for Public Administration Services - Tests",
		"description": "# Warning\n**This is an experimental API that is (most probably) going to change as we evolve the IO platform.**\n# Introduction\nThis is the documentation of the IO API for 3rd party services. This API enables Public Administration services to integrate with the IO platform. IO enables services to communicate with Italian citizens via the [IO app](https://io.italia.it/).\n# How to get an API key\nTo get access to this API, you'll need to register on the [IO Developer Portal](https://developer.io.italia.it/).\nAfter the registration step, you have to click on the button that says `subscribe to the digital citizenship api` to receive the API key that you will use to authenticate the API calls.\nYou will also receive an email with further instructions, including a fake Fiscal Code that you will be able to use to send test messages. Messages sent to the fake Fiscal Code will be notified to the email address used during the registration process on the developer portal.\n# Messages\n## What is a message\nMessages are the primary form of communication enabled by the IO APIs. Messages are **personal** communications directed to a **specific citizen**. You will not be able to use this API to broadcast a message to a group of citizens, you will have to create and send a specific, personalized message to each citizen you want to communicate to.\nThe recipient of the message (i.e. a citizen) is identified trough his [Fiscal Code](https://it.wikipedia.org/wiki/Codice_fiscale).\n## Message format\nA message is conceptually very similar to an email and, in its simplest form, is composed of the following attributes:\n\n  * A required `subject`: a short description of the topic.\n  * A required `markdown` body: a Markdown representation of the body (see\n    below on what Markdown tags are allowed).\n  * An optional `payment_data`: in case the message is a payment request,\n    the _payment data_ will enable the recipient to pay the requested amount\n    via [PagoPA](https://www.agid.gov.it/it/piattaforme/pagopa).\n  * An optional `due_date`: a _due date_ that let the recipient\n    add a reminder when receiving the message. The format for all\n    dates is [ISO8601](https://it.wikipedia.org/wiki/ISO_8601) with time\n    information and UTC timezone (ie. \"2018-10-13T00:00:00.000Z\").\n\n## Allowed Markdown formatting\nNot all Markdown formatting is currently available. Currently you can use the following formatting:\n\n  * Headings\n  * Text stylings (bold, italic, etc...)\n  * Lists (bullet and numbered)\n\n## Sending a message to a citizen\nNot every citizen will be interested in what you have to say and not every citizen you want to communicate to will be registered on IO. For this reason, before sending a message you need to check whether the recipient is registered on the platform and that he has not yet opted out from receiving messages from you.\nThe process for sending a message is made of 3 steps:\n\n  1. Call [getProfile](#operation/getProfile): if the profile does not exist\n     (i.e. you get a 404 response) or if the recipient has opted-out from\n     your service (the response contains `sender_allowed: false`), you\n     cannot send the message and you must stop here.\n  1. Call [submitMessageforUser](#operation/submitMessageforUser) to submit\n     a new message.\n  1. (optional) Call [getMessage](#operation/getMessage) to check whether\n     the message has been notified to the recipient.\n\n\nContact Support:\n Name: Digital Transformation Team",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "messages",
			"item": [
				{
					"name": "{fiscal code}",
					"item": [
						{
							"name": "1 - Submit a Message passing the user fiscal_code as path parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201 - Created\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"pm.test(\"Body contains message id\", function () {",
											"    var obj = pm.response.json();",
											"    pm.expect(obj.id).to.exist;",
											"",
											"    pm.collectionVariables.set(\"msg_id\", obj.id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": {\n        \"subject\": \"Welcome new user!\",\n        \"markdown\": \"# This is a markdown header\\n\\nto show how easily markdown can be converted to **HTML**\\n\\nRemember: this has to be a long text.\",\n        \"due_date\": \"2018-10-13T00:00:00.000Z\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/messages/:fiscal_code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages",
										":fiscal_code"
									],
									"variable": [
										{
											"key": "fiscal_code",
											"value": "{{fiscal_code}}",
											"description": "(Required) The fiscal code of the user, all upper case."
										}
									]
								},
								"description": "Submits a message to a user.\nOn error, the reason is returned in the response payload.\nIn order to call `submitMessageforUser`, before sending any message,\nthe sender MUST call `getProfile` and check that the profile exists\n(for the specified fiscal code) and that the `sender_allowed` field\nof the user's profile it set to `true`."
							},
							"response": [
								{
									"name": "Message created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code"
											],
											"variable": [
												{
													"key": "fiscal_code"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "ut cillum sit occaecat",
											"description": "Location (URL) of created message resource.\nA GET request to this URL returns the message status and details."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"01BX9NSMKVXXS5PSP2FATZMYYY\"\n}"
								},
								{
									"name": "Invalid payload.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code"
											],
											"variable": [
												{
													"key": "fiscal_code"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code"
											],
											"variable": [
												{
													"key": "fiscal_code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code"
											],
											"variable": [
												{
													"key": "fiscal_code"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code"
											],
											"variable": [
												{
													"key": "fiscal_code"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The message cannot be delivered.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code"
											],
											"variable": [
												{
													"key": "fiscal_code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								}
							]
						},
						{
							"name": "2 - Get Message",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/messages/:fiscal_code/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages",
										":fiscal_code",
										":id"
									],
									"variable": [
										{
											"key": "fiscal_code",
											"value": "{{fiscal_code}}",
											"description": "(Required) The fiscal code of the user, all upper case."
										},
										{
											"key": "id",
											"value": "{{msg_id}}",
											"description": "(Required) The ID of the message."
										}
									]
								},
								"description": "The previously created message with the provided message ID is\nreturned."
							},
							"response": [
								{
									"name": "Message found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code",
												":id"
											],
											"variable": [
												{
													"key": "fiscal_code"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": {\n  \"id\": \"01BX9NSMKAAAS5PSP2FATZM6BQ\",\n  \"fiscal_code\": \"QXJNTX9RCRVD6V4O\",\n  \"time_to_live\": 3600,\n  \"content\": {\n   \"subject\": \"message subject, aliquip sint nulla in estinut\",\n   \"markdown\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas et mollis felis.\\nVivamus orci nisl, commodo ut sodales ut, eleifend a libero. Donec dapibus, turpis in mattis tempor,\\nrisus nunc malesuada ex, non aliquet metus nunc a lacus. Aenean in arcu vitae nisl porta\\nfermentum nec non nibh. Phasellus tortor tellus, semper in metus eget, eleifend\\nlaoreet nibh. Aenean feugiat lectus ut nisl eleifend gravida.\"\n  },\n  \"sender_service_id\": \"01BX9NSMKVXXS5PSP2FATZM6QX\"\n },\n \"notification\": {\n  \"email\": \"QUEUED\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code",
												":id"
											],
											"variable": [
												{
													"key": "fiscal_code"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code",
												":id"
											],
											"variable": [
												{
													"key": "fiscal_code"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No message found for the provided ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code",
												":id"
											],
											"variable": [
												{
													"key": "fiscal_code"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								},
								{
									"name": "Too many requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:fiscal_code/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":fiscal_code",
												":id"
											],
											"variable": [
												{
													"key": "fiscal_code"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "3 - Submit a Message passing the user fiscal_code in the request body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 - Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Body contains message id\", function () {",
									"    var obj = pm.response.json();",
									"    pm.expect(obj.id).to.exist;",
									"",
									"    pm.collectionVariables.set(\"msg_id_3\", obj.id);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": {\n        \"subject\": \"Welcome new user!\",\n        \"markdown\": \"# This is a markdown header\\n\\nto show how easily markdown can be converted to **HTML**\\n\\nRemember: this has to be a long text.\",\n        \"due_date\": \"2018-10-13T00:00:00.000Z\"\n    },\n    \"fiscal_code\": \"{{fiscal_code}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages"
							]
						},
						"description": "Submits a message to a user.\nOn error, the reason is returned in the response payload.\nIn order to call `submitMessageforUser`, before sending any message,\nthe sender MUST call `getProfile` and check that the profile exists\n(for the specified fiscal code) and that the `sender_allowed` field\nof the user's profile it set to `true`."
					},
					"response": [
						{
							"name": "Message created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "ut cillum sit occaecat",
									"description": "Location (URL) of created message resource.\nA GET request to this URL returns the message status and details."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"01BX9NSMKVXXS5PSP2FATZMYYY\"\n}"
						},
						{
							"name": "Invalid payload.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The message cannot be delivered.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "profiles",
			"item": [
				{
					"name": "4.1- Get an existing User Profile using POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 - Found\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body contains sender_allowed\", function () {",
									"    var obj = pm.response.json();",
									"    pm.expect(obj.sender_allowed).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fiscal_code\": \"{{fiscal_code}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profiles"
							]
						},
						"description": "Returns the preferences for the user identified by the\nfiscal code provided in the request body. The field `sender_allowed` is set fo `false` in case\nthe service which is calling the API has been disabled by the user."
					},
					"response": [
						{
							"name": "Found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"foobar@example.com\",\n \"version\": 1\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No user found for the provided fiscal code.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "4.2- Get a non existing User Profile using POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - Found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body contains error\", function () {",
									"    var obj = pm.response.json();",
									"    pm.expect(obj.title).to.eq(\"Profile not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profiles"
							]
						},
						"description": "Returns the preferences for the user identified by the\nfiscal code provided in the request body. The field `sender_allowed` is set fo `false` in case\nthe service which is calling the API has been disabled by the user."
					},
					"response": [
						{
							"name": "Found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"foobar@example.com\",\n \"version\": 1\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No user found for the provided fiscal code.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fiscal_code\": \"SPNDNL80R13C555X\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "5 - Get a User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 - Found\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body contains sender_allowed\", function () {",
									"    var obj = pm.response.json();",
									"    pm.expect(obj.sender_allowed).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profiles/:fiscal_code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profiles",
								":fiscal_code"
							],
							"variable": [
								{
									"key": "fiscal_code",
									"value": "{{fiscal_code}}",
									"description": "(Required) The fiscal code of the user, all upper case."
								}
							]
						},
						"description": "Returns the preferences for the user identified by the provided\nfiscal code. The field `sender_allowed` is set fo `false` in case\nthe service which is calling the API has been disabled by the user."
					},
					"response": [
						{
							"name": "Found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:fiscal_code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":fiscal_code"
									],
									"variable": [
										{
											"key": "fiscal_code"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"foobar@example.com\",\n \"version\": 1\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:fiscal_code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":fiscal_code"
									],
									"variable": [
										{
											"key": "fiscal_code"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:fiscal_code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":fiscal_code"
									],
									"variable": [
										{
											"key": "fiscal_code"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No user found for the provided fiscal code.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:fiscal_code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":fiscal_code"
									],
									"variable": [
										{
											"key": "fiscal_code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:fiscal_code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":fiscal_code"
									],
									"variable": [
										{
											"key": "fiscal_code"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "services",
			"item": [
				{
					"name": "{service id}",
					"item": [
						{
							"name": "6 - Get Service (not working)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id",
											"value": "base",
											"description": "(Required) The ID of an existing Service."
										}
									]
								},
								"description": "Retrieve a previously created service with the provided service ID.\nThis API operation needs the same API key of the service being retrieved\notherwise 403 forbidden will be returned to the caller.\n"
							},
							"response": [
								{
									"name": "Service found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"authorized_recipients\": [\n  \"SPNDNL80R13C555X\",\n  \"SPNDNL80R13C555X\"\n ],\n \"primary_key\": \"ut anim et commodo\",\n \"secondary_key\": \"et deserunt d\",\n \"service_id\": \"consequat magna cupidatat\",\n \"id\": \"dolore non ut\",\n \"max_allowed_payment_amount\": 0\n}"
								},
								{
									"name": "Unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No service found for the provided ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "7 - Update Service (not working)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authorized_cidrs\": [],\n    \"authorized_recipients\": [],\n    \"department_name\": \"Department - new\",\n    \"is_visible\": true,\n    \"max_allowed_payment_amount\": 4271,\n    \"organization_fiscal_code\": \"02001829766\",\n    \"organization_name\": \"Bashirian, Huel and Parker\",\n    \"require_secure_channels\": true,\n    \"service_id\": \"base\",\n    \"service_metadata\": {\n        \"scope\": \"LOCAL\"\n    },\n    \"service_name\": \"drive\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id",
											"value": "{{service_id}}",
											"description": "(Required) The ID of an existing Service."
										}
									]
								},
								"description": "Update a previously created service with the provided service ID\nThis API operation needs the same API key of the service being retrieved\notherwise 403 forbidden will be returned to the caller."
							},
							"response": [
								{
									"name": "Service updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"authorized_recipients\": [\n  \"SPNDNL80R13C555X\",\n  \"SPNDNL80R13C555X\"\n ],\n \"primary_key\": \"ut anim et commodo\",\n \"secondary_key\": \"et deserunt d\",\n \"service_id\": \"consequat magna cupidatat\",\n \"id\": \"dolore non ut\",\n \"max_allowed_payment_amount\": 0\n}"
								},
								{
									"name": "Unauthorized.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No service found for the provided ID.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Too many requests.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The service cannot be updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								}
							]
						},
						{
							"name": "8 - Upload service logo.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 - OK\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"logo\": \"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\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services/:service_id/logo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":service_id",
										"logo"
									],
									"variable": [
										{
											"key": "service_id",
											"value": "{{service_id}}",
											"description": "(Required) The ID of an existing Service."
										}
									]
								},
								"description": "Upsert a logo for an existing service.\nThis API operation needs the same API key of the service being retrieved\notherwise 403 forbidden will be returned to the caller.\n"
							},
							"response": [
								{
									"name": "Logo uploaded.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"logo"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid payload.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"logo"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								},
								{
									"name": "Unauthorized.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"logo"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"logo"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No service found for the provided ID.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"logo"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The service logo cannot be uploaded.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"logo"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								}
							]
						},
						{
							"name": "9 - Regenerate Service Key (not working)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key_type\": \"SECONDARY_KEY\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services/:service_id/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services",
										":service_id",
										"keys"
									],
									"variable": [
										{
											"key": "service_id",
											"value": "{{service_id}}",
											"description": "(Required) The ID of an existing Service."
										}
									]
								},
								"description": "Regenerate the specified key for the Service identified by the provided id.\nThis API operation needs the same API key of the service being retrieved\notherwise 403 forbidden will be returned to the caller."
							},
							"response": [
								{
									"name": "The subscription keys for the service.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key_type\": \"nulla s\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"keys"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"primary_key\": \"est nulla consectetur mollit\",\n \"secondary_key\": \"est\"\n}"
								},
								{
									"name": "Invalid payload.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key_type\": \"nulla s\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"keys"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key_type\": \"nulla s\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"keys"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Service not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key_type\": \"nulla s\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"keys"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot regenerate service key.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Ocp-Apim-Subscription-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key_type\": \"nulla s\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/services/:service_id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"services",
												":service_id",
												"keys"
											],
											"variable": [
												{
													"key": "service_id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "10 - Create Service (not working)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"authorized_cidrs\": [],\n    \"authorized_recipients\": [],\n    \"department_name\": \"Department - new\",\n    \"is_visible\": true,\n    \"max_allowed_payment_amount\": 4271,\n    \"organization_fiscal_code\": \"02001829768\",\n    \"organization_name\": \"An ogranization Name\",\n    \"require_secure_channels\": true,\n    \"service_id\": \"base\",\n    \"service_metadata\": {\n        \"scope\": \"LOCAL\"\n    },\n    \"service_name\": \"drive\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new Service with the attributes provided in the request payload.\n"
					},
					"response": [
						{
							"name": "Service created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorized_recipients\": [\n  \"SPNDNL80R13C555X\",\n  \"SPNDNL80R13C555X\"\n ],\n \"primary_key\": \"ut anim et commodo\",\n \"secondary_key\": \"et deserunt d\",\n \"service_id\": \"consequat magna cupidatat\",\n \"id\": \"dolore non ut\",\n \"max_allowed_payment_amount\": 0\n}"
						},
						{
							"name": "Invalid payload.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The service cannot be created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<Error: Could not resolve allOf schema\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
						}
					]
				},
				{
					"name": "11 - Get User Services (not working)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Retrieve the identifiers of the services owned by the calling user\n"
					},
					"response": [
						{
							"name": "The list of service ids.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"items\": [\n  \"laborum\",\n  \"consequat amet quis\"\n ]\n}"
						},
						{
							"name": "Unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Too many requests.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Ocp-Apim-Subscription-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"services"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "12 - Get Subscriptions Feed of Yersterday",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function getDaysAgo(b) { var a = new Date; a.setDate(a.getDate() - b); return a };",
							"",
							"pm.environment.set(\"yesterday\", getDaysAgo(1));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 - Found\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body contains subscription feed\", function () {",
							"    var obj = pm.response.json();",
							"    pm.expect(obj.dateUTC).to.exist;",
							"    pm.expect(obj.subscriptions).to.exist;",
							"    pm.expect(obj.unsubscriptions).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/subscriptions-feed/:date",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"subscriptions-feed",
						":date"
					],
					"variable": [
						{
							"key": "date",
							"value": "{{yesterday}}",
							"description": "(Required) A date in the format YYYY-MM-DD."
						}
					]
				},
				"description": "Returns the **hashed fiscal codes** of users that **subscribed to** or\n**unsubscribed from** your service **on the provided date** (UTC).\n\nBy querying this feed on each day, you will be able to retrieve the\n\"delta\" of users that subscribed and unsubscribed fom your service.\nYou will have to keep a list of users somewhere in your infrastructure\nthat you will update each day by adding the subscribed users and\nremoving the unsunbscribed users.\n\nYou will then be able to query this local list to know which users you\ncan send messages, to without having to query `getProfile` for each message.\n\nTo avoid sharing the citizens fiscal codes, the API will\nprovide the hex encoding of the SHA256 hash of the upper case fiscal code.\nIn pseudo code `CF_HASH = LOWERCASE(HEX(SHA256(UPPERCASE(CF))))`.\n\nNote that this is an optimization for those services that need to send very high\nvolumes of messages per day, to avoid having to make two API calls for each message."
			},
			"response": [
				{
					"name": "Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"dateUTC\": \"2019-09-03\",\n \"subscriptions\": [\n  \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n ],\n \"unsubscriptions\": []\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Subscriptions feed not available yet.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
				},
				{
					"name": "Too many requests",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "12.2 - Get Subscriptions Feed in future",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function getDaysAgo(b) { var a = new Date; a.setDate(a.getDate() - b); return a };",
							"",
							"pm.environment.set(\"yesterday\", getDaysAgo(1));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 - Not Found\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Body contains subscription feed\", function () {",
							"    var obj = pm.response.json();",
							"    pm.expect(obj.title).to.eq(\"Data not available yet\");",
							"    pm.expect(obj.detail).to.eq(\"Subscription data for 2030-01-01 will be available from Wed, 02 Jan 2030 00:00:00 GMT\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/subscriptions-feed/:date",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"subscriptions-feed",
						":date"
					],
					"variable": [
						{
							"key": "date",
							"value": "2030-01-01",
							"description": "(Required) A date in the format YYYY-MM-DD."
						}
					]
				},
				"description": "Returns the **hashed fiscal codes** of users that **subscribed to** or\n**unsubscribed from** your service **on the provided date** (UTC).\n\nBy querying this feed on each day, you will be able to retrieve the\n\"delta\" of users that subscribed and unsubscribed fom your service.\nYou will have to keep a list of users somewhere in your infrastructure\nthat you will update each day by adding the subscribed users and\nremoving the unsunbscribed users.\n\nYou will then be able to query this local list to know which users you\ncan send messages, to without having to query `getProfile` for each message.\n\nTo avoid sharing the citizens fiscal codes, the API will\nprovide the hex encoding of the SHA256 hash of the upper case fiscal code.\nIn pseudo code `CF_HASH = LOWERCASE(HEX(SHA256(UPPERCASE(CF))))`.\n\nNote that this is an optimization for those services that need to send very high\nvolumes of messages per day, to avoid having to make two API calls for each message."
			},
			"response": [
				{
					"name": "Found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"dateUTC\": \"2019-09-03\",\n \"subscriptions\": [\n  \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n ],\n \"unsubscriptions\": []\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Subscriptions feed not available yet.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
				},
				{
					"name": "Too many requests",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions-feed/:date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions-feed",
								":date"
							],
							"variable": [
								{
									"key": "date"
								}
							]
						}
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Upload organization logo.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\");",
							"const service_id = pm.collectionVariables.get(\"service_id\");",
							"",
							"",
							"",
							"pm.sendRequest(`functions-admin.localhost/adm/services/${service_id}`, function (err, response) {",
							"",
							"    const orgFiscalCode = (response) ? response.json().organization_fiscal_code : undefined;",
							"    pm.collectionVariables.set(\"organization_fiscal_code\", orgFiscalCode);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202 - Accepted\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"logo\": \"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\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations",
						":organization_fiscal_code",
						"logo"
					],
					"variable": [
						{
							"key": "organization_fiscal_code",
							"value": "{{organization_fiscal_code}}",
							"description": "(Required) Organization fiscal code."
						}
					]
				},
				"description": "Upsert a logo for an Organization.\n"
			},
			"response": [
				{
					"name": "Logo uploaded.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organization_fiscal_code",
								"logo"
							],
							"variable": [
								{
									"key": "organization_fiscal_code"
								}
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Invalid payload.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organization_fiscal_code",
								"logo"
							],
							"variable": [
								{
									"key": "organization_fiscal_code"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organization_fiscal_code",
								"logo"
							],
							"variable": [
								{
									"key": "organization_fiscal_code"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organization_fiscal_code",
								"logo"
							],
							"variable": [
								{
									"key": "organization_fiscal_code"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Too many requests.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organization_fiscal_code",
								"logo"
							],
							"variable": [
								{
									"key": "organization_fiscal_code"
								}
							]
						}
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The organization logo cannot be uploaded.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Ocp-Apim-Subscription-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"logo\": \"laboris ad ullam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/:organization_fiscal_code/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organization_fiscal_code",
								"logo"
							],
							"variable": [
								{
									"key": "organization_fiscal_code"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"type\": \"https://example.com/problem/constraint-violation\",\n \"title\": \"labore aute velit consequat\",\n \"status\": 540,\n \"detail\": \"There was an error processing the request\",\n \"instance\": \"http://YDd.wxju.acsUzFt2RDcVjA-xFGB0Q8pAGfkd7tZD2-\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Functions-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "functions-services.localhost/api/v1"
		},
		{
			"key": "fiscal_code",
			"value": "GDNNWA12H81Y874F"
		},
		{
			"key": "service_id",
			"value": "base"
		},
		{
			"key": "organization_fiscal_code",
			"value": ""
		}
	]
}
